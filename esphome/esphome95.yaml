# Device specific substitutions
substitutions:
  node_id: "95"
  node_name: esphome95
  node_friendly_name: Elm√§tare (elstolpen)
  node_comment: SlimmeLezer+ (VLAN IoT)
  log_level: INFO
  
# Node info
esphome:
  name: ${node_name}
  comment: ${node_comment}
  friendly_name: ${node_friendly_name}
  name_add_mac_suffix: false
  on_boot:
    then:
      - if:
          condition:
            lambda: return id(has_key);
          then:
            - lambda: |-
                std::string key(id(stored_decryption_key), 32);
                id(dsmr_instance).set_decryption_key(key);
          else:
            - logger.log:
                level: info
                format: "Not using decryption key. If you need to set a key use Home Assistant service 'ESPHome:  ${node_name}_set_dsmr_key'"

# Include base packages
packages:
  device_base: !include common/.base.yaml

esp8266:
  board: d1_mini
  restore_from_flash: true
  framework:
    version: recommended

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  actions:
    - action: set_dsmr_key
      variables:
        private_key: string
      then:
        - logger.log:
            format: Setting private key %s. Set to empty string to disable
            args: [private_key.c_str()]
        - globals.set:
            id: has_key
            value: !lambda "return private_key.length() == 32;"
        - lambda: |-
            if (private_key.length() == 32)
              private_key.copy(id(stored_decryption_key), 32);
            id(dsmr_instance).set_decryption_key(private_key);

uart:
  baud_rate: 115200
  rx_pin: D7
  rx_buffer_size: 1700

globals:
  - id: has_key
    type: bool
    restore_value: yes
    initial_value: "false"
  - id: stored_decryption_key
    type: char[32]
    restore_value: yes

dsmr:
  id: dsmr_instance
  max_telegram_length: 1700
  # For Luxembourg users set here your decryption key
  #decryption_key: !secret decryption_key // enable this when using decryption for Luxembourg; key like '00112233445566778899AABBCCDDEEFF'

sensor:
  - platform: dsmr
    energy_delivered_lux:
      name: "Energy Consumed Luxembourg"
      state_class: total_increasing
    # energy_delivered_tariff1:
    #   name: "Energy Consumed Tariff 1"
    #   state_class: total_increasing
    # energy_delivered_tariff2:
    #   name: "Energy Consumed Tariff 2"
    #   state_class: total_increasing
    # energy_returned_lux:
    #   name: "Energy Produced Luxembourg"
    #   state_class: total_increasing
    # energy_returned_tariff1:
    #   name: "Energy Produced Tariff 1"
    #   state_class: total_increasing
    # energy_returned_tariff2:
    #   name: "Energy Produced Tariff 2"
    #   state_class: total_increasing
    power_delivered:
      name: "Power Consumed"
      accuracy_decimals: 3
    # power_returned:
    #   name: "Power Produced"
    #   accuracy_decimals: 3
    electricity_failures:
      name: "Electricity Failures"
      icon: mdi:alert
    electricity_long_failures:
      name: "Long Electricity Failures"
      icon: mdi:alert
    voltage_l1:
      name: "Voltage Phase 1"
    voltage_l2:
      name: "Voltage Phase 2"
    voltage_l3:
      name: "Voltage Phase 3"
    current_l1:
      name: "Current Phase 1"
    current_l2:
      name: "Current Phase 2"
    current_l3:
      name: "Current Phase 3"
    power_delivered_l1:
      name: "Power Consumed Phase 1"
      accuracy_decimals: 3
    power_delivered_l2:
      name: "Power Consumed Phase 2"
      accuracy_decimals: 3
    power_delivered_l3:
      name: "Power Consumed Phase 3"
      accuracy_decimals: 3
    # power_returned_l1:
    #   name: "Power Produced Phase 1"
    #   accuracy_decimals: 3
    # power_returned_l2:
    #   name: "Power Produced Phase 2"
    #   accuracy_decimals: 3
    # power_returned_l3:
    #   name: "Power Produced Phase 3"
    #   accuracy_decimals: 3
    # gas_delivered:
    #   name: "Gas Consumed"
    # gas_delivered_be:
    #   name: "Gas Consumed Belgium"
  - platform: uptime
    name: "SlimmeLezer Uptime"

text_sensor:
  - platform: dsmr
    identification:
      name: "DSMR Identification"
    # p1_version:
    #   name: "DSMR Version"
    # p1_version_be:
    #   name: "DSMR Version Belgium"
  - platform: wifi_info
    ip_address:
      name: "SlimmeLezer IP Address"
    ssid:
      name: "SlimmeLezer Wi-Fi SSID"
    bssid:
      name: "SlimmeLezer Wi-Fi BSSID"
  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true

switch:
  - platform: restart
    internal: true
    id: myRestartSwitch