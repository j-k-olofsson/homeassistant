ange_starttid_for_bilvarmen:
  alias: Ange starttid för bilvärmen
  sequence:
  - service: input_datetime.set_datetime
    metadata: {}
    data:
      datetime: '{{ starttid }}'
    target:
      entity_id: input_datetime.starta_bilvarmen
  mode: single
  icon: mdi:clock-time-five-outline
  fields:
    starttid:
      selector:
        datetime: {}
      name: starttid
      required: true
rescan_wifi_on_esphome_nodes:
  alias: Rescan wifi on all esphome nodes
  description: ''
  sequence:
  - repeat:
      for_each: '{{ integration_entities(''esphome'') | select(''search'', ''_wifi_bssid$'')
        | list | sort }}'
      sequence:
      - action: esphome.esphome{{ repeat.item[14:16] }}_scan_wifi
        continue_on_error: true
      - action: notify.send_message
        continue_on_error: true
        data:
          message: 'Rescan wifi: esphome{{ repeat.item[14:16] }}'
        target:
          entity_id: notify.file
granny_broadcast:
  alias: Granny Broadcast (kanalneutral)
  description: Grannifiera en uppgift och (valfritt) skicka till valda kanaler. Returnerar
    alltid final_message.
  mode: parallel
  max: 50
  fields:
    task:
      name: task
      description: Kort instruktion till Granny (obligatorisk)
      required: true
      selector:
        text: {}
    severity:
      name: severity
      selector:
        select:
          options:
          - info
          - warn
          - crit
      default: info
    humor_level:
      name: humor_level
      selector:
        number:
          min: 0
          max: 3
          step: 1
      default: 2
    recipient:
      name: recipient
      description: Namn att tilltala (t.ex. Diego)
      selector:
        text: {}
    channels:
      name: Kanaler
      description: Välj en eller flera kanaler (lämna tom för att inte skicka något)
      selector:
        select:
          multiple: true
          options:
          - label: TTS (högtalare/grupp)
            value: tts
          - label: Mobil (notify.mobile_app_pixel_9_pro_xl)
            value: mobile
          - label: TV (notify.android_tv_fire_tv)
            value: tv
          - label: HA-notis (persistent_notification)
            value: ha
    tts_media_player:
      name: tts_media_player
      description: Högtalare eller grupp för TTS (fallback = media_player.grupp_grannys_hogtalare)
      selector:
        entity:
          domain: media_player
      default: media_player.grupp_grannys_hogtalare
  sequence:
  - variables:
      sev: '{{ severity | default(''info'') }}'
      hum_in: '{{ humor_level | default(2) }}'
      humor_eff: '{{ 0 if (sev == ''crit'') else (hum_in | int) }}'
      is_weekend: '{{ now().weekday() in [5,6] }}'
      quiet_start: '23:00:00'
      quiet_end_weekday: 05:30:00
      quiet_end_weekend: 07:00:00
      now_hms: '{{ now().strftime(''%H:%M:%S'') }}'
      in_quiet_hours: "{% if is_weekend %}\n  {{ (now_hms >= quiet_start) or (now_hms
        <= quiet_end_weekend) }}\n{% else %}\n  {{ (now_hms >= quiet_start) or (now_hms
        <= quiet_end_weekday) }}\n{% endif %}"
      sev_title: '{% if sev == ''crit'' %}Viktigt meddelande från Granny {% elif sev
        == ''warn'' %}Granny varnar {% else %}Granny säger{% endif %}'
      tv_color: '{% if sev == ''crit'' %}red {% elif sev == ''warn'' %}orange {% else
        %}teal{% endif %}'
      _channels: '{{ channels | default([]) }}'
      use_tts: '{{ ''tts'' in _channels }}'
      use_mobile: '{{ ''mobile'' in _channels }}'
      use_tv: '{{ ''tv'' in _channels }}'
      use_ha: '{{ ''ha'' in _channels }}'
      fallback_message: Hallå där, detta är Granny - som dessvärre glömt bort vad
        jag skulle säga
  - variables:
      persona: "Du spelar rollen ”Granny” från Ice Age.\n- Personlighet: Butter, smågrinig,
        ironisk men med varm botten.\n- Röst: Kort, rapp, syrligt rolig. Aldrig elak
        mot personer; skämten riktas mot situationen.\n- Stil: Svensk vardagston.
        Fakta får inte hittas på. Vid oklarhet: skriv \"uppgift saknas\".\n- Humor-skala:\n
        \ 0: neutral; 1: lätt syrligt ordval; 2: syrligt rolig, kort punchline;\n
        \ 3: tydlig humor men strikt on-topic.\n- Regler: Alltid svenska. Vid severity=\"crit\":
        humor=0."
      instructions: "[System] {{ persona }} Returnera strikt JSON, ingen prosa, inget
        markdown.\n[Uppgift] {% if (recipient | default('') | trim) %}Adressat: {{
        recipient }}.{% endif %} {{ task }}\n[Reglage] humor_level: {{ humor_eff }}
        severity: {{ sev }}\n[Output JSON schema] {\n  \"message\": \"OBLIGATORISKT:
        icke-tomt, 1 mening, kanalneutral\",\n  \"severity\": \"info|warn|crit\",\n
        \ \"meta\": { \"humor\": 0-3, \"lang\": \"sv\", \"persona\": \"granny:1.0\"
        }\n}"
  - data:
      task_name: Grannyfierad prompt
      instructions: '{{ instructions }}'
      entity_id: ai_task.ollama_ai_task_llama3_1_8b
    response_variable: granny_primary
    action: ai_task.generate_data
  - variables:
      raw_primary: '{{ granny_primary.data | default('''') }}'
      granny_json: "{% if raw_primary is string %}\n  {% set s = raw_primary | trim
        %}\n  {% if s|length > 0 and s.startswith('{') and s.endswith('}') %}\n    {{
        s | from_json }}\n  {% else %}{{ dict() }}{% endif %}\n{% elif raw_primary
        %}{{ raw_primary }} {% else %}{{ dict() }}{% endif %}"
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ (granny_json is mapping) and (granny_json | length ==
          0) }}'
      sequence:
      - data:
          task_name: Grannyfierad prompt (fallback)
          instructions: '{{ instructions }}'
          entity_id: ai_task.ollama_ai_task_llama3_1_8b
        response_variable: granny_fallback
        action: ai_task.generate_data
      - variables:
          raw_fallback: '{{ granny_fallback.data | default('''') }}'
          granny_json: "{% if raw_fallback is string %}\n  {% set s = raw_fallback
            | trim %}\n  {% if s|length > 0 and s.startswith('{') and s.endswith('}')
            %}\n    {{ s | from_json }}\n  {% else %}{{ dict() }}{% endif %}\n{% elif
            raw_fallback %}{{ raw_fallback }} {% else %}{{ dict() }}{% endif %}"
  - variables:
      msg: "{% if granny_json and (granny_json is mapping) %}\n  {{ granny_json.get('message','')
        }}\n{% else %}{{ raw_primary | string }}{% endif %}"
      final_message: '{% set base = (msg | trim) %} {{ base if base|length>0 else
        fallback_message }}'
  - data:
      level: info
      message: '[granny_broadcast] sev={{ sev }} humor={{ humor_eff }} quiet={{ in_quiet_hours
        }} title="{{ sev_title }}" tv_color={{ tv_color }} final="{{ final_message
        }}" tts_target={{ tts_media_player | default(''media_player.grupp_grannys_hogtalare'')
        }} channels={{ _channels }} -> send: ha={{ use_ha }} mobile={{ use_mobile
        }} tv={{ use_tv }} tts={{ use_tts }}

        '
    action: system_log.write
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ use_ha }}'
      sequence:
      - data:
          title: '{{ sev_title }}'
          message: '{{ final_message }}'
        action: persistent_notification.create
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ use_mobile }}'
      sequence:
      - data:
          title: '{{ sev_title }}'
          message: '{{ final_message | truncate(200, true) }}'
          data:
            tag: granny
        action: notify.mobile_app_pixel_9_pro_xl
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ use_tv }}'
      sequence:
      - data:
          data:
            duration: 10
            position: top-right
            fontsize: small
            transparency: 25%
            color: '{{ tv_color }}'
            interrupt: 0
            image: /config/file_notifications/Granny.ico
          title: '{{ sev_title }}'
          message: '{{ final_message | truncate(200, true) }}'
        action: notify.android_tv_fire_tv
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ use_tts and not in_quiet_hours }}'
      sequence:
      - data:
          cache: false
          message: '{{ final_message }}'
          entity_id: '{{ tts_media_player | default(''media_player.grupp_grannys_hogtalare'')
            }}'
        action: tts.cloud_say
  - variables:
      return_final_message: '{{ final_message }}'
      return_severity_title: '{{ sev_title }}'
      return_severity: '{{ sev }}'
      return_humor_level: '{{ humor_eff }}'
